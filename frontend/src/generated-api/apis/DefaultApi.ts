/* tslint:disable */
/* eslint-disable */
/**
 * vuefast-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateTodoRequest,
  HTTPValidationError,
  Todo,
} from '../models/index';
import {
    CreateTodoRequestFromJSON,
    CreateTodoRequestToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    TodoFromJSON,
    TodoToJSON,
} from '../models/index';

export interface CompleteTodoRequest {
    todoId: string;
}

export interface CreateTodoOperationRequest {
    createTodoRequest: CreateTodoRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Complete Todo
     */
    async completeTodoRaw(requestParameters: CompleteTodoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Todo>> {
        if (requestParameters['todoId'] == null) {
            throw new runtime.RequiredError(
                'todoId',
                'Required parameter "todoId" was null or undefined when calling completeTodo().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos/{todo_id}/complete`.replace(`{${"todo_id"}}`, encodeURIComponent(String(requestParameters['todoId']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodoFromJSON(jsonValue));
    }

    /**
     * Complete Todo
     */
    async completeTodo(requestParameters: CompleteTodoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Todo> {
        const response = await this.completeTodoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create Todo
     */
    async createTodoRaw(requestParameters: CreateTodoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Todo>> {
        if (requestParameters['createTodoRequest'] == null) {
            throw new runtime.RequiredError(
                'createTodoRequest',
                'Required parameter "createTodoRequest" was null or undefined when calling createTodo().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/todos`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateTodoRequestToJSON(requestParameters['createTodoRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodoFromJSON(jsonValue));
    }

    /**
     * Create Todo
     */
    async createTodo(requestParameters: CreateTodoOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Todo> {
        const response = await this.createTodoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * List Todo
     */
    async listTodoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Todo>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TodoFromJSON));
    }

    /**
     * List Todo
     */
    async listTodo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Todo>> {
        const response = await this.listTodoRaw(initOverrides);
        return await response.value();
    }

}
